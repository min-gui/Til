name: Wiki Update with Enhanced Preview
on:
  gollum:
jobs:
  notify:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Send Wiki Update to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          # 기본 정보 추출
          TITLE="${{ github.event.pages[0].title }}"
          ACTION="${{ github.event.pages[0].action }}"
          URL="${{ github.event.pages[0].html_url }}"
          EDITOR="${{ github.event.sender.login }}"
          PAGE_NAME="${{ github.event.pages[0].page_name }}"
          
          # 액션 한글 변환
          case "$ACTION" in
            "created") ACTION_KR="생성" EMOJI="✨" ;;
            "edited") ACTION_KR="수정" EMOJI="📝" ;;
            "deleted") ACTION_KR="삭제" EMOJI="🗑️" ;;
            *) ACTION_KR="$ACTION" EMOJI="📄" ;;
          esac
          
          # Wiki 내용 확인 및 트리거 검사
          PREVIEW=""
          SEND_NOTIFICATION=false
          
          if [ "$ACTION" != "deleted" ]; then
            git clone -q --depth 1 https://github.com/${{ github.repository }}.wiki.git w 2>/dev/null && {
              for ext in .md .markdown ""; do
                [ -f "w/${PAGE_NAME}${ext}" ] && {
                  # 첫 번째 줄에서 트리거 문자 확인
                  FIRST_LINE=$(head -n 1 "w/${PAGE_NAME}${ext}" | sed 's/^[[:space:]]*//')
                  
                  # 트리거 문자 확인 (slackSend 또는 원하는 다른 키워드)
                  if echo "$FIRST_LINE" | grep -q "slackSend\|SLACK_SEND\|@slack"; then
                    SEND_NOTIFICATION=true
                    echo "📢 트리거 감지: $FIRST_LINE"
                  else
                    echo "ℹ️ 트리거 없음. 알림 전송 안함: $FIRST_LINE"
                  fi
                  
                  # 미리보기 내용 추출 (트리거 라인 제외)
                  PREVIEW=$(cat "w/${PAGE_NAME}${ext}" | \
                    sed '1d' | \
                    sed '/^$/d' | \
                    sed '/^[[:space:]]*$/d' | \
                    sed 's/^[[:space:]]*//' | \
                    head -5 | \
                    sed 's/^#*[[:space:]]*//' | \
                    sed 's/^\*[[:space:]]*/• /' | \
                    sed 's/^-[[:space:]]*/• /')
                  break
                }
              done
              rm -rf w
            }
          else
            # 삭제 액션의 경우 항상 알림 전송
            SEND_NOTIFICATION=true
          fi
          
          # 트리거가 없으면 종료
          if [ "$SEND_NOTIFICATION" = false ]; then
            echo "🔕 트리거 조건 불충족. 알림 전송하지 않음."
            exit 0
          fi
          
          [ -z "$PREVIEW" ] && PREVIEW="미리보기 없음"
          
          # 미리보기를 블록으로 구성 (최대 5줄)
          PREVIEW_LINES=""
          LINE_COUNT=0
          while IFS= read -r line && [ $LINE_COUNT -lt 5 ]; do
            [ -n "$line" ] && {
              PREVIEW_LINES="$PREVIEW_LINES$line\n"
              LINE_COUNT=$((LINE_COUNT + 1))
            }
          done << EOF
          $PREVIEW
          EOF
          
          # 미리보기가 있으면 블록 구성, 없으면 간단한 context만
          if [ -n "$PREVIEW_LINES" ] && [ "$PREVIEW_LINES" != "미리보기 없음" ]; then
            PREVIEW_BLOCK='[
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "'"$EMOJI"' *'"$TITLE"'* 페이지가 '"$ACTION_KR"'되었습니다\n👤 '"$EDITOR"' • 📅 '"$(TZ='Asia/Seoul' date '+%m/%d %H:%M')"'"
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "```\n'"$(echo "$PREVIEW_LINES" | sed 's/"/\\"/g')"'\n```"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "<'"$URL"'|📖 전체 내용 보러가기>"
                }
              }
            ]'
          else
            PREVIEW_BLOCK='[
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "'"$EMOJI"' *'"$TITLE"'* 페이지가 '"$ACTION_KR"'되었습니다\n👤 '"$EDITOR"' • 📅 '"$(TZ='Asia/Seoul' date '+%m/%d %H:%M')"'"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "<'"$URL"'|📖 전체 내용 보러가기>"
                }
              }
            ]'
          fi
          
          # Slack 메시지 전송
          curl -X POST "$SLACK_WEBHOOK_URL" \
            -H 'Content-type: application/json' \
            -d '{
              "text": "'"$EMOJI"' Wiki '"$ACTION_KR"': '"$TITLE"'",
              "blocks": '"$PREVIEW_BLOCK"'
            }'
